{"version":3,"file":"getOptions.js","names":["_lodash","require","_visualizationsSettings","DEFAULT_OPTIONS","globalSeriesType","sortX","legend","enabled","placement","traceorder","xAxis","type","labels","yAxis","opposite","alignYAxesAtZero","error_y","visible","series","stacking","seriesOptions","valuesOptions","columnMapping","direction","sizemode","coefficient","numberFormat","percentFormat","textFormat","enableLink","linkOpenNewTab","linkFormat","missingValuesAsZero","getOptions","options","result","merge","showDataLabels","dateTimeFormat","visualizationsSettings","indexOf","percentValues"],"sources":["../../../src/visualizations/chart/getOptions.ts"],"sourcesContent":["import { merge } from \"lodash\";\nimport { visualizationsSettings } from \"@/visualizations/visualizationsSettings\";\n\nconst DEFAULT_OPTIONS = {\n  globalSeriesType: \"column\",\n  sortX: true,\n  legend: { enabled: true, placement: \"auto\", traceorder: \"normal\" },\n  xAxis: { type: \"-\", labels: { enabled: true } },\n  yAxis: [{ type: \"linear\" }, { type: \"linear\", opposite: true }],\n  alignYAxesAtZero: false,\n  error_y: { type: \"data\", visible: true },\n  series: { stacking: null, error_y: { type: \"data\", visible: true } },\n  seriesOptions: {},\n  valuesOptions: {},\n  columnMapping: {},\n  direction: { type: \"counterclockwise\" },\n  sizemode: \"diameter\",\n  coefficient: 1,\n\n  // showDataLabels: false, // depends on chart type\n  numberFormat: \"0,0[.]00000\",\n  percentFormat: \"0[.]00%\",\n  // dateTimeFormat: 'DD/MM/YYYY HH:mm', // will be set from visualizationsSettings\n  textFormat: \"\", // default: combination of {{ @@yPercent }} ({{ @@y }} Â± {{ @@yError }})\n\n  enableLink: false,\n  linkOpenNewTab: true,\n  linkFormat: \"\", // template like a textFormat\n\n  missingValuesAsZero: true,\n};\n\nexport default function getOptions(options: any) {\n  const result = merge(\n    {},\n    DEFAULT_OPTIONS,\n    {\n      showDataLabels: options.globalSeriesType === \"pie\",\n      dateTimeFormat: visualizationsSettings.dateTimeFormat,\n    },\n    options\n  );\n\n  // Backward compatibility\n  if ([\"normal\", \"percent\"].indexOf(result.series.stacking) >= 0) {\n    result.series.percentValues = result.series.stacking === \"percent\";\n    result.series.stacking = \"stack\";\n  }\n\n  return result;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,uBAAA,GAAAD,OAAA;AAEA,IAAME,eAAe,GAAG;EACtBC,gBAAgB,EAAE,QAAQ;EAC1BC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE;IAAEC,OAAO,EAAE,IAAI;IAAEC,SAAS,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAS,CAAC;EAClEC,KAAK,EAAE;IAAEC,IAAI,EAAE,GAAG;IAAEC,MAAM,EAAE;MAAEL,OAAO,EAAE;IAAK;EAAE,CAAC;EAC/CM,KAAK,EAAE,CAAC;IAAEF,IAAI,EAAE;EAAS,CAAC,EAAE;IAAEA,IAAI,EAAE,QAAQ;IAAEG,QAAQ,EAAE;EAAK,CAAC,CAAC;EAC/DC,gBAAgB,EAAE,KAAK;EACvBC,OAAO,EAAE;IAAEL,IAAI,EAAE,MAAM;IAAEM,OAAO,EAAE;EAAK,CAAC;EACxCC,MAAM,EAAE;IAAEC,QAAQ,EAAE,IAAI;IAAEH,OAAO,EAAE;MAAEL,IAAI,EAAE,MAAM;MAAEM,OAAO,EAAE;IAAK;EAAE,CAAC;EACpEG,aAAa,EAAE,CAAC,CAAC;EACjBC,aAAa,EAAE,CAAC,CAAC;EACjBC,aAAa,EAAE,CAAC,CAAC;EACjBC,SAAS,EAAE;IAAEZ,IAAI,EAAE;EAAmB,CAAC;EACvCa,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,CAAC;EAEd;EACAC,YAAY,EAAE,aAAa;EAC3BC,aAAa,EAAE,SAAS;EACxB;EACAC,UAAU,EAAE,EAAE;EAAE;;EAEhBC,UAAU,EAAE,KAAK;EACjBC,cAAc,EAAE,IAAI;EACpBC,UAAU,EAAE,EAAE;EAAE;;EAEhBC,mBAAmB,EAAE;AACvB,CAAC;AAEc,SAASC,UAAUA,CAACC,OAAY,EAAE;EAC/C,IAAMC,MAAM,GAAG,IAAAC,aAAK,EAClB,CAAC,CAAC,EACFjC,eAAe,EACf;IACEkC,cAAc,EAAEH,OAAO,CAAC9B,gBAAgB,KAAK,KAAK;IAClDkC,cAAc,EAAEC,8CAAsB,CAACD;EACzC,CAAC,EACDJ,OACF,CAAC;;EAED;EACA,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAACM,OAAO,CAACL,MAAM,CAACjB,MAAM,CAACC,QAAQ,CAAC,IAAI,CAAC,EAAE;IAC9DgB,MAAM,CAACjB,MAAM,CAACuB,aAAa,GAAGN,MAAM,CAACjB,MAAM,CAACC,QAAQ,KAAK,SAAS;IAClEgB,MAAM,CAACjB,MAAM,CAACC,QAAQ,GAAG,OAAO;EAClC;EAEA,OAAOgB,MAAM;AACf"}